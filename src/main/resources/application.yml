webhookie:
  consumer:
    queue: ${WH_CONSUMER_QUEUE:wh-customer.event}
    missing-header:
      exchange: ${WH_CONSUMER_MISSING_HEADER_EXCHANGE:wh-customer}
      routing-key: ${WH_CONSUMER_MISSING_HEADER_ROUTING_KEY:wh-missing-header}
  subscription:
    retry:
      max-retry: 3
      initial-interval: 5
      multiplier: 2
  security:
    audience: ${WH_SECURITY_AUD:account}
    login-url: ${WH_SECURITY_LOGIN_URL:http://localhost:8080}
    roles:
      jwk-json-path: ${WH_SECURITY_ROLES_JSON_PATH:$.realm_access.roles} # if autoAssign is false and cannot find WH_CONSUMER then respond with 403
      auto-assign-consumer: ${WH_SECURITY_AUTO_ASSIGN_CONSUMER_ROLE:true}
    no-auth:
      pathMatchers:
        OPTIONS: /**
        GET: /actuator/**, /swagger-ui.html**, /v3/api-docs**, /v3/api-docs/**, /webjars/swagger-ui/**
mongodb:
  encrypt:
    keys:
      - version: 1
        key: hqHKBLV83LpCqzKpf8OvutbCs+O5wX5BPu3btWpEvXA=
spring:
  data:
    mongodb:
      uri: mongodb+srv://${WH_DB_USERNAME}:${WH_DB_PASSWORD}@${WH_DB_HOST}/${WH_DB_NAME}?retryWrites=true&w=majority
  rabbitmq:
    host: ${WH_AMQP_HOST}
    virtual-host: ${WH_AMQP_V_HOST}
    username: ${WH_AMQP_USERNAME}
    password: ${WH_AMQP_PASSWORD}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${WH_IAM_ISSUER_URI}
          jwk-set-uri: ${WH_IAM_JWK_SET_URI}
          jws-algorithm: ${WH_IAM_JWS_ALG}
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS
  info:
    git:
      mode: full
logging:
  pattern:
    file: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} - %X{dd.trace_id:-0} %X{dd.span_id:-0} - %m%n%wEx"
