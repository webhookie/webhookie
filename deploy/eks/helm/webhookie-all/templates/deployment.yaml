apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ required "You need to provide a value for .Values.app" .Values.app}}
  namespace: "default"
  labels:
    app: "{{ .Values.app }}"
    role: main
spec:
  replicas: {{.Values.webhookie.replicas}}
  selector:
    matchLabels:
      app: {{.Values.app}}
      role: main
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      labels:
        app: {{.Values.app}}
        role: main
    spec:
#      serviceAccountName: {{.Values.app}}-sa
      containers:
      - image: "{{.Values.webhookie.imageName}}:{{.Values.webhookie.imageVersion}}"
        imagePullPolicy: Always
        name: {{.Values.app}}
        resources:
          limits:
            memory: "4Gi"
            cpu: "2"
          requests:
            memory: "2Gi"
            cpu: "1"
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 80
          protocol: TCP
        env:
        - name: WEBHOOKIE_ANALYTICS_SEND
          value: "false"
        - name: AWS_REGION
          value: {{ .Values.region }}
        - name: PRODUCT_CODE
          value: {{ .Values.productCode }}
        - name: PRODUCT_VERSION
          value: {{.Values.webhookie.imageVersion}}
        - name: WH_IAM_ISSUER_URI
          value: {{.Values.WH_IAM_ISSUER_URI}}
        - name: WH_IAM_JWK_SET_URI
          value: {{.Values.WH_IAM_JWK_SET_URI}}
        - name: WH_IAM_JWS_ALG
          value: {{.Values.WH_IAM_JWS_ALG}}
        - name: WH_SECURITY_AUD
          value: {{.Values.WH_SECURITY_AUD}}
        - name: WH_SECURITY_CLIENT_ID
          value: {{.Values.WH_SECURITY_CLIENT_ID}}
        - name: WH_SECURITY_ROLES_JSON_PATH
          value: {{.Values.WH_SECURITY_ROLES_JSON_PATH}}
        - name: WH_SECURITY_GROUPS_JSON_PATH
          value: {{.Values.WH_SECURITY_GROUPS_JSON_PATH}}
        - name: WH_SECURITY_ENTITY_JSON_PATH
          value: {{.Values.WH_SECURITY_ENTITY_JSON_PATH}}
        - name: WH_SECURITY_AUTO_ASSIGN_CONSUMER_ROLE
          value: "{{.Values.WH_SECURITY_AUTO_ASSIGN_CONSUMER_ROLE}}"
        - name: WH_SECURITY_OAUTH2_AUTHORIZATION_URI
          value: {{.Values.WH_SECURITY_OAUTH2_AUTHORIZATION_URI}}
        - name: WH_SECURITY_OAUTH2_TOKEN_URI
          value: {{.Values.WH_SECURITY_OAUTH2_TOKEN_URI}}
        - name: WH_AMQP_PASSWORD
          value: {{.Values.WH_AMQP_PASSWORD}}
        - name: WH_AMQP_V_HOST
          value: {{.Values.WH_AMQP_V_HOST}}
        - name: WH_AMQP_USERNAME
          value: {{.Values.WH_AMQP_USERNAME}}
        - name: WH_AMQP_HOST
          value: {{.Values.WH_AMQP_HOST}}
        - name: WH_CONSUMER_QUEUE
          value: {{.Values.WH_CONSUMER_QUEUE}}
        - name: WH_CONSUMER_MISSING_HEADER_EXCHANGE
          value: {{.Values.WH_CONSUMER_MISSING_HEADER_EXCHANGE}}
        - name: WH_MONGODB_URI
          value: {{.Values.WH_MONGODB_URI}}
        - name: WEBHOOKIE_SECURITY_ALLOWED_ORIGINS
          value: {{.Values.WEBHOOKIE_SECURITY_ALLOWED_ORIGINS}}
        - name: WEBHOOKIE_MAIN_COLOR
          value: {{.Values.WEBHOOKIE_MAIN_COLOR}}
        - name: WEBHOOKIE_PAGE_TITLE
          value: {{.Values.WEBHOOKIE_PAGE_TITLE}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.app }}-mongodb"
  labels:
    app: "{{ .Values.app }}"
    role: db
spec:
  selector:
    matchLabels:
      app: "{{ .Values.app }}"
      role: db
  replicas: 1
  template:
    metadata:
      labels:
        app: "{{ .Values.app }}"
        role: db
    spec:
      containers:
        - name: mongodb
          image: mongo:4
          args:
            - --bind_ip
            - 0.0.0.0
          resources:
            requests:
              memory: 1Gi
          ports:
            - containerPort: 27017
              protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.app }}-keycloak"
  labels:
    app: "{{ .Values.app }}"
    role: iam
spec:
  selector:
    matchLabels:
      app: "{{ .Values.app }}"
      role: iam
  replicas: 1
  template:
    metadata:
      labels:
        app: "{{ .Values.app }}"
        role: iam
    spec:
      containers:
        - name: keycloak
          image: wizzn/keycloak:14
          volumeMounts:
            - name: realm-config-volume
              mountPath: /var/data/webhookie/realm-export.json
              subPath: realm-export.json
            - name: user-config-volume
              mountPath: /opt/jboss/keycloak/standalone/configuration/keycloak-add-user.json
              subPath: keycloak-add-user.json
          resources:
            requests:
              memory: 2Gi
          ports:
            - containerPort: 9990
              protocol: TCP
            - containerPort: 8080
              protocol: TCP
          env:
            - name: KEYCLOAK_IMPORT
              value: /var/data/webhookie/realm-export.json
      volumes:
        - name: realm-config-volume
          configMap:
            name: keycloak-realm-config
            items:
              - key: realm-export.json
                path: realm-export.json
        - name: user-config-volume
          configMap:
            name: keycloak-user-config
            items:
              - key: keycloak-add-user.json
                path: keycloak-add-user.json
